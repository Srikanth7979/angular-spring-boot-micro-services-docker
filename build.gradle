buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		
		mavenLocal()
		mavenCentral()
		
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'docker'

sourceSets{
	main{
		java{
			srcDir "microservices/src/main/java"
		}
		resources{
			srcDir "microservices/src/main/resources"
		}
	}
	test{
		java{
			srcDir "microservices/src/test/java"
		}
		resources{
			srcDir "microservices/src/test/resources"
		}
	}	
}
jar {
	baseName = 'spring-boot'
	version =  '1.0.0'
}


repositories {
	
	mavenLocal()
	mavenCentral()

}

dependencies {

    //To use log4
    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude  module: "spring-boot-starter-logging" //remove the LogBack
    }
    //its part spring-boot-starter-web


    //end log4j configuration
    compile ("org.springframework.boot:spring-boot-starter-data-jpa"){
        exclude  module: "spring-boot-starter-logging" //remove LogBack
    }
    compile("org.springframework.boot:spring-boot-starter-log4j") //finally log4j lib
    compile("mysql:mysql-connector-java:5.1.38")
    //uncomment following line to use ms sql jdbc
    //refer to the read me note
    //compile("com.microsoft.sql:sqljdbc:4.0.0")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.6'
}
task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	tagVersion = 1
	dockerfile = file('microservices/src/main/docker/Dockerfile')
	doFirst {
		ant.project.properties['env.APP_JAR_NAME'] = jar.baseName+'-1.0.0.jar'
		copy {
			from jar
			into stageDir
		}
	}
}